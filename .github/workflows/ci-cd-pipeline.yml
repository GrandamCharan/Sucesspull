name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Use the latest LTS version of Node.js
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run linting (with telemetry disabled)
      - name: Run linting
        run: |
          NEXT_TELEMETRY_DISABLED=1 npm run lint
        env:
          CI: true # Fail on warnings in CI environment

      # Step 5: Run tests
      - name: Run tests
        run: npm test

      # Step 6: Build the Next.js project
      - name: Build project
        run: npm run build

      # Step 7: Upload build artifacts for deployment
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            .next/
            public/
            package.json
            package-lock.json

  deploy:
    name: Deploy to Production
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      # Step 1: Download build artifacts from the previous job
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build

      # Step 2: Set up Node.js environment for deployment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Use the latest LTS version of Node.js

      # Step 3: Install production dependencies only (omit devDependencies)
      - name: Install production dependencies
        run: npm ci --omit=dev

      # Step 4 (Optional): Deploy to your hosting platform (e.g., Vercel, AWS, etc.)
      - name: Deploy to production (placeholder)
        run: echo "Add your deployment command here"
        # Example for Vercel deployment:
        # env:
        #   VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        # run: npx vercel --prod --token $VERCEL_TOKEN
